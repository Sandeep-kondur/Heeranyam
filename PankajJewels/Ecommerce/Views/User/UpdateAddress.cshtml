@model Ecommerce.Models.ModelClasses.AddressModel
@{
    Layout = "~/Views/Shared/_AdminMaster.cshtml";
}

<div class="sb2-2">
    <div class="sb2-2-2">
        <ul>
            <li>
                <a href="#"><i class="fa fa-home" aria-hidden="true"></i> Home</a>
            </li>
            <li class="active-bre">
                <a href="#"> Add-Edit Address</a>
            </li>
        </ul>
    </div>
    <div class="sb2-2-3">
        <div class="row">
            <div class="col-md-12">
                <div class="box-inn-sp">
                    <div class="inn-title">
                        <div class="row">
                            <h4>Address Management</h4>
                            <p></p>
                            <a href="~/User/Profile"><h5 class="pull-right">Back to profile</h5></a>
                        </div>

                    </div>
                    <div class="tab-inn">
                        <form action="~/User/updateAddress" method="post" enctype="multipart/form-data">
                            @Html.HiddenFor(b => b.Id)
                             
                            <intput type="hidden" value="ViewBag.LoggedUser.userId" name="UserId"></intput>
                            <div class="row">
                                <div class="input-field col s4">
                                    @Html.Label("Address 1")
                                    @Html.TextBoxFor(a => a.Address1, null, new { @class = "validate", @placeholder = "Address 1" })
                                    @Html.ValidationMessageFor(b => b.Address1, null, new { @class = "text-danger" })
                                </div>
                                <div class="input-field col s4">
                                    @Html.Label("Address 2")
                                    @Html.TextBoxFor(a => a.Address2, null, new { @class = "validate", @placeholder = "Address 2" })
                                    @Html.ValidationMessageFor(b => b.Address2, null, new { @class = "text-danger" })
                                </div>
                                <div class="input-field col s4">
                                    @Html.Label("Location")
                                    @Html.TextBoxFor(a => a.LocationStreet, null, new { @class = "validate", @placeholder = "Location" })
                                    @Html.ValidationMessageFor(b => b.LocationStreet, null, new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="input-field col s4">
                                    @Html.Label("Landmark")
                                    @Html.TextBoxFor(a => a.LandMark, null, new { @class = "validate", @placeholder = "Landmark" })
                                    @Html.ValidationMessageFor(b => b.LandMark, null, new { @class = "text-danger" })
                                </div>
                                <div class="input-field col s4">

                                    @Html.DropDownListFor(x => Model.CountryId, new SelectList(Model.countryList, "Id", "CountryName", Model.CountryId), htmlAttributes: new { id = "countryId", onchange = "GetStates()" })
                                    @Html.ValidationMessageFor(x => x.CountryId, "", new { @class = "text-danger" })

                                </div>
                                <div class="input-field col s4">
                                    @Html.DropDownListFor(x => Model.StateId, new SelectList(Model.stateList, "Id", "StateName", Model.StateId), htmlAttributes: new { id = "stateId", onchange = "GetCities()" })
                                    @Html.ValidationMessageFor(x => x.StateId, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="row">

                                <div class="input-field col s3">
                                    @Html.DropDownListFor(x => Model.CityId, new SelectList(Model.cityList, "Id", "CityName", Model.CityId), htmlAttributes: new { id = "cityId" })
                                    @Html.ValidationMessageFor(x => x.CityId, "", new { @class = "text-danger" })
                                </div>


                                <div class="input-field col s3">
                                    @Html.Label("Zipcode")
                                    @Html.TextBoxFor(a => a.ZipCode, null, new { @class = "validate", @placeholder = "Zip Code" })
                                    @Html.ValidationMessageFor(b => b.ZipCode, null, new { @class = "text-danger" })
                                </div>
                                <div class="input-field col s4">
                                    @Html.DropDownListFor(x => Model.AddressTypeId, new SelectList(Model.addtypeList, "Id", "AddressTypeName", Model.StateId), htmlAttributes: new { })
                                    @Html.ValidationMessageFor(x => x.AddressTypeId, "", new { @class = "text-danger" })
                                </div>
                                </div><div class="row">
                                <div class="input-field col s2">
                                    @Html.Label("Delivery Here ?")
                                </div>
                                <div class="input-field col s3">
                                    <select name="IsDeliverAddress">
                                        @if (Model.IsDeliverAddress == "Yes")
                                        {
                                            <option value="No">No</option>
                                            <option value="Yes" selected>Yes</option>
                                        }
                                        else
                                        {
                                            <option value="No" selected>No</option>
                                            <option value="Yes">Yes</option>
                                        }

                                    </select>
                                </div>
                            </div>


                            <div class="row">
                                <div class="input-field col s12">
                                    <i class="waves-effect waves-light btn-large waves-input-wrapper" style=""><input type="submit" class="waves-button-input"></i>
                                </div>
                            </div>
                            <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function GetSubCats() {
        var catid = $('#CatId option:selected').val();
        $.ajax({
            url: GlobalUrl + "/api/MasterMgmt/GetSubCategories_V1?Id=" + catid,
            type: 'post',
            data: '{}',
            success: function (res) {
                var r = res.response.length;
                var row = '';

                if (r > 0) {

                    for (var i = 0; i < r; i++) {
                        row = row + '<option value="' + res.response[i].subCategoryId + '">' + res.response[i].subCategoryName + '</option>';
                        //$('#SubCategoryId').append('<option value="' + res.result[i].subCategryId + '">' + res.result[i].subCategoryName + '</option>');
                    }
                }
                $('#SubCatId').html('');
                $('#SubCatId').html(row);
                $('#SubCatId').material_select();
                GetDetCats();

            }
        });
    }
    function GetCities() {
        var id = $('#stateId option:selected').val();
        $.ajax({
            url: GlobalUrl + "/Masters/GetCities?cid=" + id,
            type: 'post',
            data: '{}',
            success: function (res) {
                var r = res.result.length;
                var row = '';

                if (r > 0) {

                    for (var i = 0; i < r; i++) {
                        row = row + '<option value="' + res.result[i].id + '">' + res.result[i].cityName + '</option>';
                        //$('#SubCategoryId').append('<option value="' + res.result[i].subCategryId + '">' + res.result[i].subCategoryName + '</option>');
                    }
                }
                $('#cityId').html('');
                $('#cityId').html(row);
                $('#cityId').material_select();
            }
        });
    }
    $(document).ready(function () {

        $("select[name=CatId]").change(function () {
            var catid = this.value;
            $.ajax({
                url: GlobalUrl + "/MasterMgmt/GetSubCategories",
                type: 'post',
                data: {
                    'Id': catid,
                    'pageNumber': 1,
                    'pageSize': 1000
                },
                success: function (res) {
                    var r = res.result.length;
                    var row = '';

                    if (r > 0) {

                        for (var i = 0; i < r; i++) {
                            row = row + '<option value="' + res.result[i].SubCategoryId + '">' + res.result[i].SubCategoryName + '</option>';
                            //$('#SubCategoryId').append('<option value="' + res.result[i].subCategryId + '">' + res.result[i].subCategoryName + '</option>');
                        }
                    }
                    $('#SubCatId').html('');
                    $('#SubCatId').html(row);
                    $('#SubCatId').material_select();
                }
            });
        });




        // states
        $("select[name=CounryId]").change(function () {
            var catid = this.value;
            $.ajax({
                url: GlobalUrl + "/OthersMasters/GetStatesDrop?id=" + catid,
                type: 'post',
                data: '{}',
                success: function (res) {
                    var r = res.result.length;
                    var row = '';

                    if (r > 0) {

                        for (var i = 0; i < r; i++) {
                            row = row + '<option value="' + res.result[i].id + '">' + res.result[i].stateName + '</option>';
                            //$('#SubCategoryId').append('<option value="' + res.result[i].subCategryId + '">' + res.result[i].subCategoryName + '</option>');
                        }
                    }
                    $('#StateId').html('');
                    $('#StateId').html(row);
                    $('#StateId').material_select();
                }
            });
        });


        // cities
        $("select[name=StateId]").change(function () {
            var catid = this.value;
            $.ajax({
                url: GlobalUrl + "/OthersMasters/GetCitiesDrop?id=" + catid,
                type: 'post',
                data: '{}',
                success: function (res) {
                    var r = res.result.length;
                    var row = '';

                    if (r > 0) {

                        for (var i = 0; i < r; i++) {
                            row = row + '<option value="' + res.result[i].id + '">' + res.result[i].cityName + '</option>';
                            //$('#SubCategoryId').append('<option value="' + res.result[i].subCategryId + '">' + res.result[i].subCategoryName + '</option>');
                        }
                    }
                    $('#CityId').html('');
                    $('#CityId').html(row);
                    $('#CityId').material_select();
                }
            });
        });


        // cities
        $("select[name=CityId]").change(function () {
            var catid = this.value;
            $.ajax({
                url: GlobalUrl + "/OthersMasters/GetZonesDrop?id=" + catid,
                type: 'post',
                data: '{}',
                success: function (res) {
                    var r = res.result.length;
                    var row = '';

                    if (r > 0) {

                        for (var i = 0; i < r; i++) {
                            row = row + '<option value="' + res.result[i].masterId + '">' + res.result[i].zoneName + '</option>';
                            //$('#SubCategoryId').append('<option value="' + res.result[i].subCategryId + '">' + res.result[i].subCategoryName + '</option>');
                        }
                    }
                    $('#ZoneId').html('');
                    $('#ZoneId').html(row);
                    $('#ZoneId').material_select();
                }
            });
        });
    });



</script>